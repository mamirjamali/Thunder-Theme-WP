{"version":3,"file":"block-editor/index.js","mappings":"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","sources":["webpack://thunder-plus/./src/block-editor/neon.css","webpack://thunder-plus/external window [\"wp\",\"blockEditor\"]","webpack://thunder-plus/external window [\"wp\",\"components\"]","webpack://thunder-plus/external window [\"wp\",\"data\"]","webpack://thunder-plus/external window [\"wp\",\"editPost\"]","webpack://thunder-plus/external window [\"wp\",\"element\"]","webpack://thunder-plus/external window [\"wp\",\"i18n\"]","webpack://thunder-plus/external window [\"wp\",\"plugins\"]","webpack://thunder-plus/external window [\"wp\",\"richText\"]","webpack://thunder-plus/./src/block-editor/neon-format.js","webpack://thunder-plus/./src/block-editor/sidebar.js","webpack://thunder-plus/webpack/bootstrap","webpack://thunder-plus/webpack/runtime/make namespace object","webpack://thunder-plus/./src/block-editor/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"richText\"];","import './neon.css';\r\nimport { registerFormatType, toggleFormat } from '@wordpress/rich-text';\r\nimport { RichTextToolbarButton } from \"@wordpress/block-editor\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport { useSelect } from '@wordpress/data'\r\n\r\n\r\nregisterFormatType(\"thunder-plus/neon\", {\r\n    title: __(\"Neon\", \"thunder-plus\"),\r\n    tagName: \"span\",\r\n    className: \"neon\",\r\n    edit({ isActive, onChange, value }){\r\n        const selectedBlock = useSelect((select) => \r\n            {select('core/block-editor').getSelectedBlock()}\r\n        );\r\n\r\n        return(\r\n            <>\r\n            {\r\n                selectedBlock?.name === \"core/paragraph\" &&(\r\n                <RichTextToolbarButton \r\n                title={__(\"Neon\", \"thunder-plus\")}\r\n                icon=\"superhero\"\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    onChange(toggleFormat(value,{\r\n                        type:\"thunder-plus/neon\",\r\n                    })\r\n                  );\r\n                }}\r\n\r\n                />\r\n            )}\r\n            \r\n            </>\r\n            \r\n        );\r\n    },\r\n})","import { registerPlugin } from '@wordpress/plugins';\r\nimport { PluginSidebar } from '@wordpress/edit-post';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { \r\n    PanelBody,\r\n    TextControl,\r\n    TextareaControl,\r\n    ToggleControl,\r\n    Button,\r\n} from '@wordpress/components';\r\nimport {MediaUpload, MediaUploadCheck} from '@wordpress/block-editor';\r\n\r\nregisterPlugin(\"thp-sidebar\", {\r\n    render (){\r\n        const {og_title, og_image, og_description, og_override_image} = useSelect((select) =>{\r\n            const {getEditedPostAttribute} = select('core/editor');\r\n            return(getEditedPostAttribute('meta'))\r\n\r\n        })\r\n\r\n        const {editPost} =useDispatch('core/editor');\r\n\r\n        return(\r\n            <PluginSidebar\r\n            name='thp_sidebar_og'\r\n            icon='share'\r\n            title={__(\"Thunder Plus Sidebar\", \"thunder-plus\")}\r\n            >\r\n                <PanelBody title={__(\"Opengraph Options\", \"thunder-plus\")}>\r\n                <TextControl \r\n                    label={__(\"Title\", \"thunder-plus\")}\r\n                    value={og_title}\r\n                    onChange={og_title =>\r\n                         editPost({\r\n                            meta: {\r\n                                og_title,\r\n                            },\r\n                        })\r\n                    }\r\n                />\r\n                <TextareaControl \r\n                    label={__(\"Description\", \"thunder-plus\")}\r\n                    value={og_description}\r\n                    onChange={og_description => \r\n                        editPost({\r\n                            meta: {\r\n                                og_description,\r\n                            },\r\n                        })\r\n                    }\r\n                />\r\n                <ToggleControl \r\n                    label={__(\"Override Featured Image\", \"thunder-plus\")}\r\n                    checked={og_override_image}\r\n                    help={__(\r\n                    \"By default, the featured image will be used as the image. Check this option to use a different image.\",\r\n                    \"thunder-plus\"\r\n                    )}\r\n                    onChange={og_override_image => \r\n                        editPost({\r\n                            meta: {\r\n                                og_override_image: og_override_image,\r\n                            },\r\n                        })\r\n                    }\r\n                    \r\n                />\r\n                \r\n                {\r\n                    og_override_image &&\r\n                    <>\r\n                    <img src={og_image}/>\r\n                    <MediaUploadCheck>\r\n                        <MediaUpload\r\n                        accept={[\"image\"]}\r\n                        render={( {open} ) => {\r\n                            return(\r\n                                <Button isPrimary onClick={open}>\r\n                                    {__(\"Change Image\", \"thunder-plus\")}\r\n                                </Button>\r\n                            );\r\n                        }}\r\n                        onSelect={(image) => {\r\n                            editPost({\r\n                                meta: {\r\n                                    og_image: image.sizes.openGraph.url,\r\n                                },\r\n                            })\r\n                        }}\r\n                        />\r\n                    </MediaUploadCheck>\r\n                    </>\r\n                }\r\n                </PanelBody>\r\n            </PluginSidebar>\r\n        )\r\n    }\r\n})","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './sidebar.js'\r\nimport  './neon-format.js'"],"names":["registerFormatType","toggleFormat","RichTextToolbarButton","__","useSelect","title","tagName","className","edit","isActive","onChange","value","selectedBlock","select","getSelectedBlock","name","type","registerPlugin","PluginSidebar","useDispatch","PanelBody","TextControl","TextareaControl","ToggleControl","Button","MediaUpload","MediaUploadCheck","render","og_title","og_image","og_description","og_override_image","getEditedPostAttribute","editPost","meta","open","image","sizes","openGraph","url"],"sourceRoot":""}